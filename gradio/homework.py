import fasttext
import gradio as gr

# –ü—É—Ç—å –∫ –¥–∞—Ç–∞—Å–µ—Ç—É
dataset_path = "dataset.txt"  # –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –ª–µ–∂–∞—Ç—å –≤ –æ–¥–Ω–æ–π –ø–∞–ø–∫–µ —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º

# –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏
print("–û–±—É—á–∞–µ–º –º–æ–¥–µ–ª—å...")
model = fasttext.train_supervised(
    input=dataset_path,
    epoch=25,
    lr=1.0,
    wordNgrams=2,
    bucket=200000,
    dim=100,
    loss='softmax'
)
print("–û–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–æ–¥–µ–ª—å
model_path = "lang_detect.ftz"
model.save_model(model_path)
print(f"–ú–æ–¥–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {model_path}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —è–∑—ã–∫–∞
def predict_language(text):
    if not text.strip():
        return "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç..."
    label, confidence = model.predict(text)
    lang = label[0].replace("__label__", "")
    conf = round(confidence[0] * 100, 2)
    return f"{lang} ({conf}%)"

# Gradio –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å real-time
iface = gr.Interface(
    fn=predict_language,
    inputs=gr.Textbox(label="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç"),
    outputs=gr.Textbox(label="–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π —è–∑—ã–∫"),
    title="üåç Real-Time Language Detector",
    description="–ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ (uz, ru, en, kk, qq) –≤–æ –≤—Ä–µ–º—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞",
    live=True  # üî• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤–≤–æ–¥–µ
)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    iface.launch()